<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN " "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hr">

	<resultMap id="responseCommutingMap" type="com.project.hot.hr.model.dto.ResponseCommuting">
		<id column="COMMUTING_NO" property="commutingNo"/>
		<result column="EMPLOYEE_NO" property="employeeNo" />
		<result column="EMPLOYEE_NAME" property="employeeName" />
		<result column="COMMUTING_GO_WORK_TIME" property="commutingGoWorkTime" />
		<result column="COMMUTING_LEAVE_WORK_TIME" property="commutingLeaveWorkTime" />
		<result column="COMMUTING_STATUS" property="commutingStatus" />
		<result column="COMMUTING_DATE" property="commutingDate" />
		<result column="DEPARTMENT_TITLE" property="departmentTitle" />
		<result column="POSITION_TITLE" property="positionTitle" />
	</resultMap>

	<resultMap type="responseDepartment" id="departmentMap">
		<id column="DEPARTMENT_CODE" property="departmentCode" />
		<result column="DEPARTMENT_HIGH_TITLE" property="departmentHighTitle"/>
		<result column="DEPARTMENT_TITLE" property="departmentTitle"/>
		<result column="DEPARTMENT_HEAD_NAME" property="departmentHeadName"/>
		<result column="TOTAL_DEPARTMENT_COUNT" property="totalDepartmentCount"/>
	</resultMap>

	<select id="totalDepartmentCount" resultType="_int">
		SELECT COUNT(*) FROM DEPARTMENT WHERE DEPARTMENT_TITLE LIKE '${departmentTitle}%'
	</select>

	<select id="departmentList" resultMap="departmentMap">
		SELECT
			d.DEPARTMENT_CODE,
		    d.DEPARTMENT_TITLE,
		    h.DEPARTMENT_TITLE AS DEPARTMENT_HIGH_TITLE,
		    e.EMPLOYEE_NAME AS DEPARTMENT_HEAD_NAME,
		    CASE
		        WHEN d.DEPARTMENT_HIGH_CODE = 1 THEN
		            (SELECT COUNT(*)
		             FROM EMPLOYEE e2
		             JOIN DEPARTMENT d2 ON e2.DEPARTMENT_CODE = d2.DEPARTMENT_CODE
		             WHERE d2.DEPARTMENT_HIGH_CODE = d.DEPARTMENT_CODE)
		        ELSE
		            (SELECT COUNT(*)
		             FROM EMPLOYEE e2
		             WHERE e2.DEPARTMENT_CODE = d.DEPARTMENT_CODE)
		    END AS TOTAL_DEPARTMENT_COUNT
		FROM
		    DEPARTMENT d
		LEFT JOIN
		    DEPARTMENT h ON d.DEPARTMENT_HIGH_CODE = h.DEPARTMENT_CODE
		LEFT JOIN
		    EMPLOYEE e ON d.DEPARTMENT_CODE = e.DEPARTMENT_CODE AND (e.POSITION_CODE = 2 OR e.POSITION_CODE = 1)
		<if test="departmentTitle != '' and departmentTitle != null">
			WHERE d.DEPARTMENT_TITLE LIKE '${departmentTitle}%'
		</if>
		START WITH d.DEPARTMENT_HIGH_CODE IS NULL
		CONNECT BY PRIOR d.DEPARTMENT_CODE = d.DEPARTMENT_HIGH_CODE
		ORDER SIBLINGS BY d.DEPARTMENT_TITLE
	</select>

	<insert id="insertDepartment" parameterType="requestDepartment">
		INSERT INTO DEPARTMENT VALUES(SEQ_DEPARTMENT.NEXTVAL, #{highCode}, #{newTitle}, #{auth})
	</insert>

	<update id="updateDepartment" parameterType="requestDepartment">
		UPDATE DEPARTMENT
		<set>
			<if test="highCode != '' and highCode != null">DEPARTMENT_HIGH_CODE=#{highCode},</if>
			<if test="newTitle != '' and newTitle != null">DEPARTMENT_TITLE=#{newTitle}</if>
		</set>
		WHERE DEPARTMENT_CODE=#{deptCode}
	</update>

	<delete id="deleteDepartment">
		DELETE FROM DEPARTMENT WHERE DEPARTMENT_CODE=#{deptCode}
	</delete>

	<delete id="deleteEmployee">
		DELETE FROM EMPLOYEE WHERE EMPLOYEE_NO = #{no}
	</delete>

	<insert id="insertEmployee" parameterType="requestDepartment">
		INSERT INTO EMPLOYEE VALUES
		(
			SEQ_EMPLOYEE.NEXTVAL, #{departmentCode}, #{positionCode}, #{employeeName},
			#{employeePhone}, #{employeePassword}, #{employeeId}, #{employeeAddress}, #{employeeBirthDay},
			#{employeeSsn}, #{employeeHireDate}, #{employeeSalary}, null, null, #{employeeTotalVacation}
		)
	</insert>

	<select id="countAllEmpCommuting" parameterType="com.project.hot.hr.model.dto.RequestCommuting" resultType="_int">
		SELECT
			COUNT(*)
		FROM
			EMPLOYEE e
			JOIN COMMUTING c ON c.EMPLOYEE_NO = e.EMPLOYEE_NO
			JOIN DEPARTMENT d ON e.DEPARTMENT_CODE = d.DEPARTMENT_CODE
			JOIN POSITION p on e.POSITION_CODE = p.POSITION_CODE
		<where>
			<if test="employeeName != null and employeeName != ''">
				e.EMPLOYEE_NAME LIKE '%${employeeName}%'
			</if>
			<if test="searchDate != null">
				AND TRUNC(c.COMMUTING_DATE) = TRUNC(#{searchDate})
			</if>
			<if test="departmentCode != null and departmentCode != 0">
				AND d.DEPARTMENT_CODE = #{departmentCode}
			</if>
			<if test="status != null and status != ''">
				AND c.COMMUTING_STATUS = #{status}
			</if>
		</where>
	</select>

	<select id="selectAllEmpCommuting" parameterType="com.project.hot.hr.model.dto.RequestCommuting" resultMap="responseCommutingMap">
		SELECT
			c.*, e.EMPLOYEE_NO, d.DEPARTMENT_TITLE, p.POSITION_TITLE, e.EMPLOYEE_NAME
		FROM
			EMPLOYEE e
			JOIN COMMUTING c ON c.EMPLOYEE_NO = e.EMPLOYEE_NO
			JOIN DEPARTMENT d ON e.DEPARTMENT_CODE = d.DEPARTMENT_CODE
			JOIN POSITION p on e.POSITION_CODE = p.POSITION_CODE
		<where>
			<if test="employeeName != null and employeeName != ''">
				e.EMPLOYEE_NAME LIKE '%${employeeName}%'
			</if>
			<if test="searchDate != null">
				AND TRUNC(c.COMMUTING_DATE) = TRUNC(#{searchDate})
			</if>
			<if test="departmentCode != null and departmentCode != 0">
				AND d.DEPARTMENT_CODE = #{departmentCode}
			</if>
			<if test="status != null and status != ''">
				AND c.COMMUTING_STATUS = #{status}
			</if>
		</where>
	</select>

	<delete id="deleteCommuting">
		DELETE FROM COMMUTING WHERE COMMUTING_NO=#{no}
	</delete>

	<update id="updateCommuting">
		UPDATE COMMUTING
		<set>
			<if test="goTime != null">
				COMMUTING_GO_WORK_TIME=#{goTime},
			</if>
			<if test="leaveTime != null">
				COMMUTING_LEAVE_WORK_TIME=#{leaveTime},
			</if>
			<if test="status != null and status != ''">
				COMMUTING_STATUS=#{status}
			</if>
		</set>
		WHERE COMMUTING_NO=#{commutingNo}
	</update>

	<select id="selectAllEmpVacation" resultMap="approval.approvalMap">
		SELECT *
		FROM APPROVAL a
			JOIN EMPLOYEE e ON a.EMPLOYEE_NO = e.EMPLOYEE_NO
			JOIN DEPARTMENT d ON e.DEPARTMENT_CODE = d.DEPARTMENT_CODE
			JOIN POSITION p ON e.POSITION_CODE = p.POSITION_CODE
			JOIN VACATION_FORM v ON a.APPROVAL_NO = v.APPROVAL_NO
		WHERE a.APPROVAL_STATUS = 3
		<if test="svd.type != null and svd.type != ''">
			AND v.VACATION_TYPE = #{svd.type}
		</if>
		<if test="svd.name != null and svd.name != ''">
			AND e.EMPLOYEE_NAME LIKE '%${svd.name}%'
		</if>
		<if test="svd.code != null">
			AND d.DEPARTMENT_CODE = #{svd.code}
		</if>
		<if test="svd.startDate != null">
			AND TRUNC(v.VACATION_START) >= TRUNC(#{svd.startDate})
		</if>
		<if test="svd.endDate != null">
			AND TRUNC(v.VACATION_END) &lt;= TRUNC(#{svd.endDate})
		</if>
	</select>

	<select id="countAllEmpVacation" resultType="_int">
		SELECT COUNT(*)
		FROM APPROVAL a
			JOIN EMPLOYEE e ON a.EMPLOYEE_NO = e.EMPLOYEE_NO
			JOIN DEPARTMENT d ON e.DEPARTMENT_CODE = d.DEPARTMENT_CODE
			JOIN POSITION p ON e.POSITION_CODE = p.POSITION_CODE
			JOIN VACATION_FORM v ON a.APPROVAL_NO = v.APPROVAL_NO
		WHERE a.APPROVAL_STATUS = 3
		<if test="svd.type != null and svd.type != ''">
			AND v.VACATION_TYPE = #{svd.type}
		</if>
		<if test="svd.name != null and svd.name != ''">
			AND e.EMPLOYEE_NAME LIKE '%${svd.name}%'
		</if>
		<if test="svd.code != null">
			AND d.DEPARTMENT_CODE = #{svd.code}
		</if>
		<if test="svd.startDate != null">
			AND TRUNC(v.VACATION_START) >= TRUNC(#{svd.startDate})
		</if>
		<if test="svd.endDate != null">
			AND TRUNC(v.VACATION_END) &lt;= TRUNC(#{svd.endDate})
		</if>
	</select>
</mapper>
